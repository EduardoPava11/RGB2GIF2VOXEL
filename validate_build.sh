#!/bin/bash

echo "üîç RGB2GIF2VOXEL Build Validation"
echo "================================="
echo ""

# Check Rust library
echo "1Ô∏è‚É£ Checking Rust library..."
if [ -f "rust-core/target/aarch64-apple-ios/release/libyingif_processor.a" ]; then
    SIZE=$(ls -lh rust-core/target/aarch64-apple-ios/release/libyingif_processor.a | awk '{print $5}')
    echo "   ‚úÖ Rust library found ($SIZE)"

    # Check symbols
    SYMBOLS=$(nm -gU rust-core/target/aarch64-apple-ios/release/libyingif_processor.a | grep -c yingif)
    echo "   ‚úÖ Exported symbols: $SYMBOLS"
else
    echo "   ‚ùå Rust library not found"
    echo "   Run: cargo build --target aarch64-apple-ios --release"
    exit 1
fi

echo ""
echo "2Ô∏è‚É£ Building iOS app..."
export DEVELOPER_DIR=/Applications/Xcode.app/Contents/Developer

# Clean and build
xcodebuild -project RGB2GIF2VOXEL.xcodeproj \
    -scheme RGB2GIF2VOXEL \
    -sdk iphoneos \
    -configuration Debug \
    clean build \
    CODE_SIGN_IDENTITY="" \
    CODE_SIGNING_REQUIRED=NO \
    CODE_SIGNING_ALLOWED=NO \
    2>&1 | grep -E "(Succeeded|Failed|Error|Warning)" | tail -20

if [ ${PIPESTATUS[0]} -eq 0 ]; then
    echo "   ‚úÖ Build succeeded!"
    echo ""
    echo "3Ô∏è‚É£ App Info:"
    echo "   ‚Ä¢ Front camera: TrueDepth preferred"
    echo "   ‚Ä¢ Formats: 1:1 native or center-crop"
    echo "   ‚Ä¢ Cube sizes: 66¬≥, 132¬≥, 264¬≥"
    echo "   ‚Ä¢ Processing: Lanczos3 + NeuQuant"
    echo "   ‚Ä¢ Export: GIF89a ‚â§256 colors"
    echo ""
    echo "üì± Ready for device deployment!"
else
    echo "   ‚ùå Build failed"
    echo "   Check errors above"
fi